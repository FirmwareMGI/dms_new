def FaultPhase(code):
        value_dict = {
                '0' : 'None',
                '1' : 'Phase A',
                '2' : 'Phase B',
                '3' : 'Phase C',
                '4' : 'Phase A B',
                '5' : 'Phase A C',
                '6' : 'Phase B C',
                '7' : 'Phase A B C',
                '8' : 'Earth/Ground',
                '9' : 'Earth Derived'
        }
        return value_dict.get(str(code),'0')

def FaultCode_value(code):
        value_dict = {
                '0'    :'No fault',
                '1'    :'Remote tripping',
                '2'    :'Thermal overload',
                '3'    :'tI>',
                '4'    :'tI>>',
                '5'    :'tI>>>',
                '6'    :'tIE>',
                '7'    :'tIE>>',
                '8'    :'tIE>>>',
                '9'    :'tI<',
                '10'   :'Broken conductor',
                '11'   :'tAux1',
                '12'   :'tAux2',
                '13'   :'tI2>',
                '14'   :'tI2>>',
                '15'   :'tAux3',
                '16'   :'tAux4',
                '17'   :'CB Fail',
                '18'   :'SOTF',
                '19'   :'tEQUATION A',
                '20'   :'tEQUATION B',
                '21'   :'tEQUATION C',
                '22'   :'tEQUATION D',
                '23'   :'tEQUATION E',
                '24'   :'tEQUATION F',
                '25'   :'tEQUATION G',
                '26'   :'tEQUATION H',
                '27'   :'tAux5',
                '28'   :'tIe_d>',
                '29'   :'tIe_d>>'
        }
        return value_dict.get(str(code),'0')


def code_value(code):
        value_dict = {
                '0'    :'NO EVENT',
                '1'    :'CB CLOSING (remote)',
                '2'    :'CB TRIPPING (remote)',
                '3'    :'DISTURBANCE RECORDING START',
                '4'    :'TRIPPING RELAY DELATCH',
                '5'    :'SETTING CHANGE',
                '6'    :'THERMAL STATE RESET (remote)',
                '7'    :'START/END MAINTENANCE MODE (remote)',
                '8'    :'CONTROL RELAY (maintenance mode)',
                '9'    :'I>',
                '10'   :'I>>',
                '11'   :'I>>>',
                '12'   :'Ie>',
                '13'   :'Ie>>',
                '14'   :'Ie>>>',
                '15'   :'THERMAL ALARM',
                '16'   :'THERMAL OVERLOAD',
                '17'   :'tI>',
                '18'   :'tI>>',
                '19'   :'tI>>>',
                '20'   :'tIe>',
                '21'   :'tIe>>',
                '22'   :'tIe>>>',
                '23'   :'tI<',
                '24'   :'BROKEN CONDUCTOR',
                '25'   :'tAux1',
                '26'   :'tAux2',
                '27'   :'CB FAIL',
                '28'   :'LOGIC SELECTIVITY 1',
                '29'   :'LOGIC SELECTIVITY 2',
                '30'   :'BLOCKING LOGIC 1',
                '31'   :'BLOCKING LOGIC 2',
                '32'   :'SETTING GROUP CHANGE',
                '33'   :'O/O (52a)',
                '34'   :'C/O (52b)',
                '35'   :'ACK. OF ALL ALARMS (logic input)',
                '36'   :'CB FAIL (SF6)',
                '37'   :'COLD LOAD PU',
                '38'   :'CHANGE OF THE LOGIC INPUT STATUS',
                '39'   :'THERMAL TRIP',
                '40'   :'tI> TRIP',
                '41'   :'tI>> TRIP',
                '42'   :'tI>>> TRIP',
                '43'   :'tIe> TRIP',
                '44'   :'tIe>> TRIP',
                '45'   :'tIe>>> TRIP',
                '46'   :'tI< TRIP',
                '47'   :'BROKEN CONDUCTOR TRIP',
                '48'   :'tAux1 TRIP',
                '49'   :'tAux2 TRIP',
                '50'   :'RELAY COMMAND',
                '51'   :'ACK. OF FIRST ALARM (push button)',
                '52'   :'ACK. OF ALL ALARMS (push button)',
                '53'   :'ACK. OF FIRST ALARM (remote)',
                '54'   :'ACK. OF ALL ALARMS (remote)',
                '55'   :'MAJOR MATERIAL ALARM',
                '56'   :'MINOR MATERIAL ALARM',
                '57'   :'I2>',
                '58'   :'tI2>',
                '59'   :'CB OPENING TIME',
                '60'   :'TRIP OPERATION NUMBER',
                '61'   :'SUM OF SWITCHED SQUARE AMPS',
                '62'   :'TRIP CIRCUIT SUPERVISION',
                '63'   :'CB CLOSING TIME',
                '64'   :'RECLOSER SUCCESSFUL',
                '65'   :'RECLOSER FINAL TRIP',
                '66'   :'RECLOSER SETTING ERROR',
                '67'   :'tI2> TRIP',
                '68'   :'GENERAL START',
                '69'   :'CB RECLOSING IN PROGRESS',
                '70'   :'CB RECLOSED',
                '71'   :'LATCH OUTPUT RELAYS',
                '72'   :'CB FAIL (logic input)',
                '73'   :'I<',
                '74'   :'I2>>',
                '75'   :'tI2>>',
                '76'   :'tI2>> TRIP',
                '77'   :'LOCAL MODE (IEC870-5-103)',
                '78'   :'LATCH TRIP OUTPUT RELAY',
                '79'   :'tAux3',
                '80'   :'tAux3 TRIP',
                '81'   :'tAux4',
                '82'   :'tAux4 TRIP',
                '83'   :'tReset I> ACTIVE',
                '84'   :'tReset I>> ACTIVE',
                '85'   :'tReset Ie> ACTIVE',
                '86'   :'tReset Ie>> ACTIVE',
                '87'   :'tReset I2> ACTIVE',
                '88'   :'CB FAIL TRIP',
                '89'   :'CB FAIL TIME (tBF)',
                '90'   :'CB CLOSING (logic input)',
                '91'   :'tSOTF',
                '92'   :'SOTF TRIP',
                '93'   :'LOCAL MODE',
                '94'   :'RESET LED',
                '95'   :'RECLOSER LOCKED',
                '96'   :'RECLOSER IN PROGRESS',
                '97'   :'SYNCHRONISATION',
                '98'   :'INRUSH BLOKING',
                '99'   :'tEQUATION A',
                '100'  :'tEQUATION B',
                '101'  :'tEQUATION C',
                '102'  :'tEQUATION D',
                '103'  :'tEQUATION E',
                '104'  :'tEQUATION F',
                '105'  :'tEQUATION G',
                '106'  :'tEQUATION H',
                '107'  :'tEQUATION A TRIP',
                '108'  :'tEQUATION B TRIP',
                '109'  :'tEQUATION C TRIP',
                '110'  :'tEQUATION D TRIP',
                '111'  :'tEQUATION E TRIP',
                '112'  :'tEQUATION F TRIP',
                '113'  :'tEQUATION G TRIP',
                '114'  :'tEQUATION H TRIP',
                '115'  :'CB activity Operation time',
                '116'  :'Ie_d>',
                '117'  :'tIe_d>',
                '118'  :'tIe_d> trip',
                '119'  :'treset Ie_d>',
                '120'  :'tAux 5',
                '121'  :'tAux 5 trip',
                '122'  :'Do not used',
                '123'  :'Recloser external locked',
                '124'  :'<Text error> ID 1001 OFFSET 124',
        }
        return value_dict.get(str(code),'0')


def event_value(code):
    value_dict = {
        '5':   [' Changed Address : '],
        '50':   [
                '  Logic output relay 1 (Trip) ......................',
                '  Logic output relay 2 .............................',
                '  Logic output relay 3 .............................',
                '  Logic output relay 4 .............................',
                '  Logic output relay 0 (Watchdog) ..................',
                '  Logic output relay 5 .............................',
                '  Logic output relay 6 .............................',
                '  Logic output relay 7 .............................',
                '  Logic output relay 8 .............................'
                ],
        '55':   [
                '  Data fault .......................................',
                '  Analog fault .....................................',
                '  Calibration fault ................................',
                '  Loss of settings .................................'
                ],        
    }
    return value_dict.get(str(code),'0')


def filterFault(code):
         value_dict = {
                '3'     :'5',
                '19'    :'5'
         }

         return value_dict.get(str(code),'0')


def filter(code):
        value_dict = {
                
                '9'     :'4',
                '10'    :'4',
                '11'    :'4',
                '12'    :'4',
                '13'    :'4',
                '14'    :'4',
                '17'    :'4',
                '18'    :'4',
                '19'    :'5',
                '20'    :'4',
                '21'    :'4',
                '22'    :'4',
                '23'    :'4',
                '25'    :'4',
                '26'    :'4',
                '40'    :'4',
                '41'    :'4',
                '42'    :'4',
                '43'    :'4',
                '44'    :'4',
                '45'    :'4',
                '46'    :'4',
                '48'    :'4',
                '49'    :'4',
                '55'    :'3',
                '57'    :'4',
                '58'    :'4',
                '67'    :'4',
                '73'    :'4',
                '74'    :'4',
                '75'    :'4',
                '76'    :'4',
                '79'    :'4',
                '80'    :'4',
                '81'    :'4',
                '82'    :'4',
                '83'    :'4',
                '84'    :'4',
                '85'    :'4',
                '86'    :'4',
                '87'    :'4',
                '91'    :'4',
                '97'    :'7',
                '99'    :'4',
                '100'    :'4',
                '101'    :'4',
                '102'    :'4',
                '103'    :'4',
                '104'    :'4',
                '105'    :'4',
                '106'    :'4',
                '107'    :'4',
                '108'    :'4',
                '109'    :'4',
                '110'    :'4',
                '111'    :'4',
                '112'    :'4',
                '113'    :'4',
                '114'    :'4',
                '116'    :'4',
                '117'    :'4',
                '118'    :'4',
                '119'    :'4',
                '120'    :'4',
                '121'    :'4',
                '5'     :'7',
                '50'    :'2',
                '51'    :'7',
                '124'   :'6'
        }
        return value_dict.get(str(code),'0')


